{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Profile/ProfileForm.module.css","components/Layout/MainNavigation.module.css","components/Profile/UserProfile.module.css","components/StartingPage/StartingPageContent.module.css","hooks/useLocalStorage.js","store/auth-context.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js"],"names":["module","exports","useLocalStorage","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currTime","Date","getTime","AuthContextProvider","initalTokenValue","children","tokenData","storedToken","JSON","parse","localStorage","getItem","remainingTime","removeItem","duration","retriveStoredToken","useState","setToken","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","loginHandler","setItem","stringify","Provider","value","MainNavigation","useContext","className","classes","header","to","logo","onClick","Layout","props","ProfileForm","newPasswordInputRef","useRef","history","useHistory","form","onSubmit","e","preventDefault","enteredNewPassword","current","url","fetch","method","body","idToken","password","returnSecureToken","then","res","ok","json","Error","data","push","catch","err","alert","control","htmlFor","type","id","ref","minLength","action","UserProfile","profile","API_KEY","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","auth","event","enteredEmail","enteredPassword","email","headers","expiresIn","toISOString","replace","error","required","actions","toggle","prevState","AuthPage","StartingPageContent","starting","HomePage","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,QAAU,0BAA0B,QAAU,0BAA0B,OAAS,2B,mBCAjID,EAAOC,QAAU,CAAC,KAAO,0BAA0B,QAAU,6BAA6B,OAAS,8B,mBCAnGD,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,+B,mBCAjED,EAAOC,QAAU,CAAC,QAAU,+B,mBCA5BD,EAAOC,QAAU,CAAC,SAAW,wC,sGCuBdC,ICrBXC,E,OAEEC,EAAcC,wBAAc,CAC9BC,MAAO,GACPC,YAAY,EACZC,MAAO,SAACF,KACRG,OAAQ,eAGZ,SAASC,EAAwBC,GAC7B,IAAMC,GAAW,IAAIC,MAAOC,UAG5B,OAF0B,IAAID,KAAKF,GAAgBG,UACTF,EAsBvC,SAASG,EAAT,GAA6C,IAC5CC,EAD+BC,EAAY,EAAZA,SAE7BC,EApBV,WACI,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,sBAG9CC,EAAgBd,EAFOU,KAAKC,MAAMC,aAAaC,QAAQ,qBAI7D,OAAIC,EAAgB,MAChBF,aAAaG,WAAW,qBACxBH,aAAaG,WAAW,mBACjB,MAGJ,CACHnB,MAAOa,EACPO,SAAUF,GAMIG,GACdT,IAAWF,EAAmBE,EAAUZ,OAC5C,MAA0BsB,mBAASZ,GAAnC,mBAAOV,EAAP,KAAcuB,EAAd,KACMtB,IAAeD,EAEfwB,EAAgBC,uBAAa,WAC/BF,EAAS,IACTP,aAAaG,WAAW,qBACxBH,aAAaG,WAAW,mBACpBtB,GAAa6B,aAAa7B,KAC/B,IAUH8B,qBAAU,WACFf,IACAf,EAAc+B,WAAWJ,EAAeZ,EAAUQ,aAEvD,CAACR,EAAWY,IAEf,IAAMK,EAAe,CACjB7B,QACAC,aACAC,MAjBJ,SAAS4B,EAAc9B,EAAOK,GAC1BkB,EAASvB,GACTgB,aAAae,QAAQ,oBAAqBjB,KAAKkB,UAAUhC,IACzDgB,aAAae,QAAQ,kBAAmBjB,KAAKkB,UAAU3B,IACvD,IAAMa,EAAgBd,EAAuBC,GAC7CR,EAAc+B,WAAWE,EAAcZ,IAavCf,OAAQqB,GAGZ,OACI,cAAC1B,EAAYmC,SAAb,CAAsBC,MAAOL,EAA7B,SACMlB,IAKCb,Q,gCC3CAqC,EA/BQ,WACrB,MAA+BC,qBAAWtC,GAAlCG,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,OAEpB,OACE,yBAAQkC,UAAWC,IAAQC,OAA3B,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,qBAAKH,UAAWC,IAAQG,KAAxB,0BAEF,8BACE,gCACKxC,GACD,6BACE,cAAC,IAAD,CAAMuC,GAAG,QAAT,qBAGFvC,GACA,6BACE,cAAC,IAAD,CAAMuC,GAAG,WAAT,uBAGFvC,GACA,6BACE,wBAAQyC,QAAS,kBAAMvC,KAAvB,+BCdCwC,EATA,SAACC,GACd,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,+BAAOA,EAAMjC,e,iBC6CJkC,EA9CK,WAClB,IAAQ7C,EAAUoC,qBAAWtC,GAArBE,MACF8C,EAAsBC,mBACtBC,EAAUC,cAyBhB,OACE,uBAAMZ,UAAWC,IAAQY,KAAMC,SAxBjC,SAAwBC,GACtBA,EAAEC,iBACF,IAAMC,EAAqBR,EAAoBS,QAAQrB,MAGjDsB,EAAG,wEAZG,2CAaZC,MAAMD,EAAM,CACVE,OAAQ,OACRC,KAAM7C,KAAKkB,UAAU,CACnB4B,QAAS5D,EACT6D,SAAUP,EACVQ,mBAAmB,IAErB,eAAgB,qBAEjBC,MAAM,SAAAC,GACL,GAAIA,EAAIC,GAAI,OAAOD,EAAIE,OACvB,MAAM,IAAIC,MAAM,8BAEjBJ,MAAM,SAAAK,GAAI,OAAIpB,EAAQqB,KAAK,QAC3BC,OAAO,SAAAC,GAAG,OAAIC,MAAMD,OAIrB,UACE,sBAAKlC,UAAWC,IAAQmC,QAAxB,UACE,uBAAOC,QAAQ,eAAf,0BACA,uBACEC,KAAK,WACLC,GAAG,eACHC,IAAK/B,EACLgC,UAAW,OAGf,qBAAKzC,UAAWC,IAAQyC,OAAxB,SACE,2D,iBCnCOC,EATK,WAClB,OACE,0BAAS3C,UAAWC,IAAQ2C,QAA5B,UACE,mDACA,cAAC,EAAD,Q,iBCFAC,EAAU,0CAkGDC,EAhGE,WACf,IAAQjF,EAAUkC,qBAAWtC,GAArBI,MACF8C,EAAUC,cACVmC,EAAgBrC,mBAChBsC,EAAmBtC,mBACzB,EAA8BzB,oBAAS,GAAvC,mBAAOgE,EAAP,KAAgBC,EAAhB,KACA,EAAkCjE,oBAAS,GAA3C,mBAAOkE,EAAP,KAAkBC,EAAlB,KAoDA,OACE,0BAASpD,UAAWC,IAAQoD,KAA5B,UACE,6BAAKJ,EAAU,QAAU,YACzB,uBAAMnC,SAjDY,SAACwC,GACrBA,EAAMtC,iBAEN,IAAMuC,EAAeR,EAAc7B,QAAQrB,MACrC2D,EAAkBR,EAAiB9B,QAAQrB,MAEjDuD,GAAa,GACb,IAAIjC,EAAM,GAGRA,EADE8B,EACC,oFAAgFJ,GAEhF,wEAAoEA,GAGzEzB,MAAMD,EAAK,CACPE,OAAQ,OACRC,KAAM7C,KAAKkB,UAAU,CACnB8D,MAAOF,EACP/B,SAAUgC,EACV/B,mBAAmB,IAErBiC,QAAS,CACP,eAAgB,sBAGnBhC,MAAM,SAAAC,GAEL,OADAyB,GAAa,GACTzB,EAAIC,GACCD,EAAIE,OAEJF,EAAIE,OAAOH,MAAK,SAAAK,GAErB,MAAM,IAAID,MADS,gCAMxBJ,MAAM,SAAAK,GACL,IAAM/D,EAAiB,IAAIE,MAAM,IAAIA,MAAOC,UAA+B,KAAjB4D,EAAK4B,WAC/D9F,EAAMkE,EAAKR,QAASvD,EAAe4F,eACnCjD,EAAQkD,QAAQ,QAEjB5B,OAAO,SAAA6B,GAAK,OAAI3B,MAAM2B,OAMvB,UACE,sBAAK9D,UAAWC,IAAQmC,QAAxB,UACE,uBAAOC,QAAQ,QAAf,wBACA,uBACEC,KAAK,QACLC,GAAG,QACHwB,UAAQ,EACRvB,IAAKO,OAGT,sBAAK/C,UAAWC,IAAQmC,QAAxB,UACE,uBAAOC,QAAQ,WAAf,2BACA,uBACEC,KAAK,WACLC,GAAG,WACHwB,UAAQ,EACRvB,IAAKQ,OAGT,sBAAKhD,UAAWC,IAAQ+D,QAAxB,WACIb,GAAa,iCAASF,EAAU,QAAU,mBAC3CE,GAAa,2CACd,wBACEb,KAAK,SACLtC,UAAWC,IAAQgE,OACnB5D,QA9EoB,WAC5B6C,GAAW,SAACgB,GAAD,OAAgBA,MA0ErB,SAKGjB,EAAU,qBAAuB,0CCzF/BkB,EAJE,WACf,OAAO,cAAC,EAAD,K,iBCOMC,EARa,WAC1B,OACE,yBAASpE,UAAWC,IAAQoE,SAA5B,SACE,sDCCSC,EAJE,WACf,OAAO,cAAC,EAAD,KCmCMC,MA9Bf,WACE,IAAQ3G,EAAemC,qBAAWtC,GAA1BG,WAER,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACIA,GACA,cAAC,IAAD,CAAO4G,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,OAGD7G,GACD,cAAC,IAAD,CAAO4G,KAAK,QAAZ,SACE,cAAC,EAAD,MAGF5G,GACA,cAAC,IAAD,CAAO4G,KAAK,WAAZ,SACE,cAAC,EAAD,MAGJ,eAAC,IAAD,CAAOA,KAAK,IAAZ,WACK5G,GAAc,cAAC,IAAD,CAAUuC,GAAG,UAC5BvC,GAAc,cAAC,IAAD,CAAUuC,GAAG,eCxBvCuE,IAASC,OACP,cAACvG,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJwG,SAASC,eAAe,W","file":"static/js/main.0ac6d741.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__dEXAL\",\"control\":\"AuthForm_control__2dNP7\",\"actions\":\"AuthForm_actions__1ZccO\",\"toggle\":\"AuthForm_toggle__1tCFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__1L74_\",\"control\":\"ProfileForm_control__1dUan\",\"action\":\"ProfileForm_action__64ktI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3IPQW\",\"logo\":\"MainNavigation_logo__3gWQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__3DUbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__yiagD\"};","import { useEffect, useState } from 'react';\r\n\r\nconst PREFIX = 'DUMMY_LOGIN'\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key;\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey);\r\n        if (jsonValue != null) return JSON.parse(jsonValue);\r\n\r\n        if (typeof initialValue === 'function') return initialValue();\r\n        return initialValue\r\n    })\r\n\r\n    useEffect (() => {\r\n        if (value != undefined)\r\n            localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n        else \r\n            localStorage.setItem(prefixedKey, JSON.stringify(''))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { createContext, useState, useEffect, useCallback } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => {},\r\n    logout: () => {}\r\n})\r\n\r\nfunction calculateRemainingTime (expirationTime) {\r\n    const currTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n    const remainingTime = adjExpirationTime - currTime;\r\n    return remainingTime;\r\n}\r\n\r\nfunction retriveStoredToken () {\r\n    const storedToken = JSON.parse(localStorage.getItem('DUMMY_LOGIN-token'));\r\n    const storedExpirationDate = JSON.parse(localStorage.getItem('DUMMY_LOGIN-exp'));\r\n\r\n    const remainingTime = calculateRemainingTime(storedExpirationDate)\r\n\r\n    if (remainingTime < 3600) {\r\n        localStorage.removeItem('DUMMY_LOGIN-token');\r\n        localStorage.removeItem('DUMMY_LOGIN-exp')\r\n        return null;\r\n    } \r\n\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime\r\n    }\r\n}\r\n\r\nexport function AuthContextProvider ({ children }) {\r\n    let initalTokenValue;\r\n    const tokenData = retriveStoredToken();\r\n    if (tokenData) initalTokenValue = tokenData.token\r\n    const [token, setToken] = useState(initalTokenValue)\r\n    const isLoggedIn = !!token // converts string to bool\r\n\r\n    const logoutHandler = useCallback( () => {\r\n        setToken('')\r\n        localStorage.removeItem('DUMMY_LOGIN-token')\r\n        localStorage.removeItem('DUMMY_LOGIN-exp')\r\n        if (logoutTimer) clearTimeout(logoutTimer);\r\n    }, [])\r\n\r\n    function loginHandler (token, expirationTime) {\r\n        setToken(token)\r\n        localStorage.setItem('DUMMY_LOGIN-token', JSON.stringify(token));\r\n        localStorage.setItem('DUMMY_LOGIN-exp', JSON.stringify(expirationTime))\r\n        const remainingTime = calculateRemainingTime(expirationTime);\r\n        logoutTimer = setTimeout(loginHandler, remainingTime)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (tokenData) {\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration)\r\n        }\r\n    }, [tokenData, logoutHandler])\r\n\r\n    const contextValue = {\r\n        token,\r\n        isLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            { children }\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  const { isLoggedIn, logout } = useContext(AuthContext);\n\n  return (\n    <header className={classes.header}>\n      <Link to='/'>\n        <div className={classes.logo}>React Auth</div>\n      </Link>\n      <nav>\n        <ul>\n          { !isLoggedIn && \n            <li>\n              <Link to='/auth'>Login</Link>\n            </li>\n          }\n          { isLoggedIn &&\n            <li>\n              <Link to='/profile'>Profile</Link>\n            </li>\n          }\n          { isLoggedIn &&\n            <li>\n              <button onClick={() => logout()}>Logout</button>\n            </li>\n          }\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useContext } from 'react';\nimport classes from './ProfileForm.module.css';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom'\n\nconst API_KEY = 'AIzaSyDtLjxafYN0TGamcO2J2nRxoxCpdsplH08';\n\nconst ProfileForm = () => {\n  const { token } = useContext(AuthContext)\n  const newPasswordInputRef = useRef();\n  const history = useHistory();\n\n  function submitHandler (e) {\n    e.preventDefault();\n    const enteredNewPassword = newPasswordInputRef.current.value;\n\n    // add validation here\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:update?key=${API_KEY}`\n    fetch(url , {\n      method: 'POST',\n      body: JSON.stringify({\n        idToken: token,\n        password: enteredNewPassword,\n        returnSecureToken: false\n      }),\n      'Content-Type': 'application/json'\n    })\n    .then (res => {\n      if (res.ok) return res.json();\n      throw new Error('Password change failed!')\n    })\n    .then (data => history.push('/'))\n    .catch (err => alert(err))\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input \n          type='password' \n          id='new-password' \n          ref={newPasswordInputRef} \n          minLength={7}\n        />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useState, useRef, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { useHistory } from 'react-router-dom'\n\nconst API_KEY = 'AIzaSyDtLjxafYN0TGamcO2J2nRxoxCpdsplH08';\n\nconst AuthForm = () => {\n  const { login } = useContext(AuthContext)\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url = '';\n\n    if (isLogin) {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`\n    } else {\n      url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`\n    }\n\n    fetch(url, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then (res => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then(data => {\n            let errorMessage = 'Authentication Failed!'\n            throw new Error(errorMessage)\n          });\n          // show the error\n        }\n      })\n      .then (data => {\n        const expirationTime = new Date((new Date().getTime() + (+data.expiresIn * 1000)))\n        login(data.idToken, expirationTime.toISOString())\n        history.replace('/'); // replace insures user can't come back to this route using back btn\n      })\n      .catch (error => alert(error))\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input \n            type='email' \n            id='email' \n            required\n            ref={emailInputRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input \n            type='password' \n            id='password' \n            required \n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n          {isLoading && <p>Loading...</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport AuthContext from './store/auth-context';\nimport Layout from './components/Layout/Layout';\nimport UserProfile from './components/Profile/UserProfile';\nimport AuthPage from './pages/AuthPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  const { isLoggedIn } = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        { isLoggedIn &&\n          <Route path='/' exact>\n            <HomePage />\n          </Route>\n        }\n        { !isLoggedIn &&\n          <Route path='/auth'>\n            <AuthPage />\n          </Route>\n        }\n        { isLoggedIn &&\n          <Route path='/profile'>\n            <UserProfile />\n          </Route>\n        }\n        <Route path='*'>\n          { !isLoggedIn && <Redirect to='/auth' /> }\n          { isLoggedIn && <Redirect to='/' /> }\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthContextProvider } from './store/auth-context';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <AuthContextProvider> \n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}